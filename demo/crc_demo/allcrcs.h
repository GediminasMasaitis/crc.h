#pragma once
#include <cstdint>
#include <crc.h>

void check_all_crcs()
{
    crc::crc_base<uint64_t, 3, 0x3, 0x0, 0x7, false, false, true, 0x4> CRC_3_GSM;
    crc::crc_base<uint64_t, 3, 0x3, 0x7, 0x0, true, true, true, 0x6> CRC_3_ROHC;
    crc::crc_base<uint64_t, 4, 0x3, 0xf, 0xf, false, false, true, 0xb> CRC_4_INTERLAKEN;
    crc::crc_base<uint64_t, 4, 0x3, 0x0, 0x0, true, true, true, 0x7> CRC_4_ITU;
    crc::crc_base<uint64_t, 5, 0x09, 0x09, 0x00, false, false, true, 0x00> CRC_5_EPC;
    crc::crc_base<uint64_t, 5, 0x15, 0x00, 0x00, true, true, true, 0x07> CRC_5_ITU;
    crc::crc_base<uint64_t, 5, 0x05, 0x1f, 0x1f, true, true, true, 0x19> CRC_5_USB;
    crc::crc_base<uint64_t, 6, 0x27, 0x3f, 0x00, false, false, true, 0x0d> CRC_6_CDMA2000_A;
    crc::crc_base<uint64_t, 6, 0x07, 0x3f, 0x00, false, false, true, 0x3b> CRC_6_CDMA2000_B;
    crc::crc_base<uint64_t, 6, 0x19, 0x00, 0x00, true, true, true, 0x26> CRC_6_DARC;
    crc::crc_base<uint64_t, 6, 0x2f, 0x00, 0x3f, false, false, true, 0x13> CRC_6_GSM;
    crc::crc_base<uint64_t, 6, 0x03, 0x00, 0x00, true, true, true, 0x06> CRC_6_ITU;
    crc::crc_base<uint64_t, 7, 0x09, 0x00, 0x00, false, false, true, 0x75> CRC_7;
    crc::crc_base<uint64_t, 7, 0x4f, 0x7f, 0x00, true, true, true, 0x53> CRC_7_ROHC;
    crc::crc_base<uint64_t, 7, 0x45, 0x00, 0x00, false, false, true, 0x61> CRC_7_UMTS;
    crc::crc_base<uint64_t, 8, 0x07, 0x00, 0x00, false, false, true, 0xf4> CRC_8;
    crc::crc_base<uint64_t, 8, 0x2f, 0xff, 0xff, false, false, true, 0xdf> CRC_8_AUTOSAR;
    crc::crc_base<uint64_t, 8, 0xa7, 0x00, 0x00, true, true, true, 0x26> CRC_8_BLUETOOTH;
    crc::crc_base<uint64_t, 8, 0x9b, 0xff, 0x00, false, false, true, 0xda> CRC_8_CDMA2000;
    crc::crc_base<uint64_t, 8, 0x39, 0x00, 0x00, true, true, true, 0x15> CRC_8_DARC;
    crc::crc_base<uint64_t, 8, 0xd5, 0x00, 0x00, false, false, true, 0xbc> CRC_8_DVB_S2;
    crc::crc_base<uint64_t, 8, 0x1d, 0xff, 0x00, true, true, true, 0x97> CRC_8_EBU;
    crc::crc_base<uint64_t, 8, 0x1d, 0x00, 0x00, false, false, true, 0x37> CRC_8_GSM_A;
    crc::crc_base<uint64_t, 8, 0x49, 0x00, 0xff, false, false, true, 0x94> CRC_8_GSM_B;
    crc::crc_base<uint64_t, 8, 0x1d, 0xfd, 0x00, false, false, true, 0x7e> CRC_8_I_CODE;
    crc::crc_base<uint64_t, 8, 0x07, 0x00, 0x55, false, false, true, 0xa1> CRC_8_ITU;
    crc::crc_base<uint64_t, 8, 0x9b, 0x00, 0x00, false, false, true, 0xea> CRC_8_LTE;
    crc::crc_base<uint64_t, 8, 0x31, 0x00, 0x00, true, true, true, 0xa1> CRC_8_MAXIM;
    crc::crc_base<uint64_t, 8, 0x2f, 0x00, 0x00, false, false, true, 0x3e> CRC_8_OPENSAFETY;
    crc::crc_base<uint64_t, 8, 0x07, 0xff, 0x00, true, true, true, 0xd0> CRC_8_ROHC;
    crc::crc_base<uint64_t, 8, 0x1d, 0xff, 0xff, false, false, true, 0x4b> CRC_8_SAE_J1850;
    crc::crc_base<uint64_t, 8, 0x9b, 0x00, 0x00, true, true, true, 0x25> CRC_8_WCDMA;
    crc::crc_base<uint64_t, 10, 0x233, 0x000, 0x000, false, false, true, 0x199> CRC_10;
    crc::crc_base<uint64_t, 10, 0x3d9, 0x3ff, 0x000, false, false, true, 0x233> CRC_10_CDMA2000;
    crc::crc_base<uint64_t, 10, 0x175, 0x000, 0x3ff, false, false, true, 0x12a> CRC_10_GSM;
    crc::crc_base<uint64_t, 11, 0x385, 0x01a, 0x000, false, false, true, 0x5a3> CRC_11;
    crc::crc_base<uint64_t, 11, 0x307, 0x000, 0x000, false, false, true, 0x061> CRC_11_UMTS;
    crc::crc_base<uint64_t, 12, 0xf13, 0xfff, 0x000, false, false, true, 0xd4d> CRC_12_CDMA2000;
    crc::crc_base<uint64_t, 12, 0x80f, 0x000, 0x000, false, false, true, 0xf5b> CRC_12_DECT;
    crc::crc_base<uint64_t, 12, 0xd31, 0x000, 0xfff, false, false, true, 0xb34> CRC_12_GSM;
    crc::crc_base<uint64_t, 12, 0x80f, 0x000, 0x000, false, true, true, 0xdaf> CRC_12_UMTS;
    crc::crc_base<uint64_t, 13, 0x1cf5, 0x0000, 0x0000, false, false, true, 0x04fa> CRC_13_BBC;
    crc::crc_base<uint64_t, 14, 0x0805, 0x0000, 0x0000, true, true, true, 0x082d> CRC_14_DARC;
    crc::crc_base<uint64_t, 14, 0x202d, 0x0000, 0x3fff, false, false, true, 0x30ae> CRC_14_GSM;
    crc::crc_base<uint64_t, 15, 0x4599, 0x0000, 0x0000, false, false, true, 0x059e> CRC_15;
    crc::crc_base<uint64_t, 15, 0x6815, 0x0000, 0x0001, false, false, true, 0x2566> CRC_15_MPT1327;
    crc::crc_base<uint64_t, 16, 0x8005, 0x0000, 0x0000, true, true, true, 0xbb3d> ARC;
    crc::crc_base<uint64_t, 16, 0x1021, 0x1d0f, 0x0000, false, false, true, 0xe5cc> CRC_16_AUG_CCITT;
    crc::crc_base<uint64_t, 16, 0x8005, 0x0000, 0x0000, false, false, true, 0xfee8> CRC_16_BUYPASS;
    crc::crc_base<uint64_t, 16, 0x1021, 0xffff, 0x0000, false, false, true, 0x29b1> CRC_16_CCITT_FALSE;
    crc::crc_base<uint64_t, 16, 0xc867, 0xffff, 0x0000, false, false, true, 0x4c06> CRC_16_CDMA2000;
    crc::crc_base<uint64_t, 16, 0x8005, 0xffff, 0x0000, false, false, true, 0xaee7> CRC_16_CMS;
    crc::crc_base<uint64_t, 16, 0x8005, 0x800d, 0x0000, false, false, true, 0x9ecf> CRC_16_DDS_110;
    crc::crc_base<uint64_t, 16, 0x0589, 0x0000, 0x0001, false, false, true, 0x007e> CRC_16_DECT_R;
    crc::crc_base<uint64_t, 16, 0x0589, 0x0000, 0x0000, false, false, true, 0x007f> CRC_16_DECT_X;
    crc::crc_base<uint64_t, 16, 0x3d65, 0x0000, 0xffff, true, true, true, 0xea82> CRC_16_DNP;
    crc::crc_base<uint64_t, 16, 0x3d65, 0x0000, 0xffff, false, false, true, 0xc2b7> CRC_16_EN_13757;
    crc::crc_base<uint64_t, 16, 0x1021, 0xffff, 0xffff, false, false, true, 0xd64e> CRC_16_GENIBUS;
    crc::crc_base<uint64_t, 16, 0x1021, 0x0000, 0xffff, false, false, true, 0xce3c> CRC_16_GSM;
    crc::crc_base<uint64_t, 16, 0x6f63, 0x0000, 0x0000, false, false, true, 0xbdf4> CRC_16_LJ1200;
    crc::crc_base<uint64_t, 16, 0x8005, 0x0000, 0xffff, true, true, true, 0x44c2> CRC_16_MAXIM;
    crc::crc_base<uint64_t, 16, 0x1021, 0xffff, 0x0000, true, true, true, 0x6f91> CRC_16_MCRF4XX;
    crc::crc_base<uint64_t, 16, 0x5935, 0x0000, 0x0000, false, false, true, 0x5d38> CRC_16_OPENSAFETY_A;
    crc::crc_base<uint64_t, 16, 0x755b, 0x0000, 0x0000, false, false, true, 0x20fe> CRC_16_OPENSAFETY_B;
    crc::crc_base<uint64_t, 16, 0x1dcf, 0xffff, 0xffff, false, false, true, 0xa819> CRC_16_PROFIBUS;
    crc::crc_base<uint64_t, 16, 0x1021, 0xb2aa, 0x0000, true, true, true, 0x63d0> CRC_16_RIELLO;
    crc::crc_base<uint64_t, 16, 0x8bb7, 0x0000, 0x0000, false, false, true, 0xd0db> CRC_16_T10_DIF;
    crc::crc_base<uint64_t, 16, 0xa097, 0x0000, 0x0000, false, false, true, 0x0fb3> CRC_16_TELEDISK;
    crc::crc_base<uint64_t, 16, 0x1021, 0x89ec, 0x0000, true, true, true, 0x26b1> CRC_16_TMS37157;
    crc::crc_base<uint64_t, 16, 0x8005, 0xffff, 0xffff, true, true, true, 0xb4c8> CRC_16_USB;
    crc::crc_base<uint64_t, 16, 0x1021, 0xc6c6, 0x0000, true, true, true, 0xbf05> CRC_A;
    crc::crc_base<uint64_t, 16, 0x1021, 0x0000, 0x0000, true, true, true, 0x2189> KERMIT;
    crc::crc_base<uint64_t, 16, 0x8005, 0xffff, 0x0000, true, true, true, 0x4b37> MODBUS;
    crc::crc_base<uint64_t, 16, 0x1021, 0xffff, 0xffff, true, true, true, 0x906e> X_25;
    crc::crc_base<uint64_t, 16, 0x1021, 0x0000, 0x0000, false, false, true, 0x31c3> XMODEM;
    crc::crc_base<uint64_t, 17, 0x1685b, 0x00000, 0x00000, false, false, true, 0x04f03> CRC_17_CAN_FD;
    crc::crc_base<uint64_t, 21, 0x102899, 0x000000, 0x000000, false, false, true, 0x0ed841> CRC_21_CAN_FD;
    crc::crc_base<uint64_t, 24, 0x864cfb, 0xb704ce, 0x000000, false, false, true, 0x21cf02> CRC_24;
    crc::crc_base<uint64_t, 24, 0x00065b, 0x555555, 0x000000, true, true, true, 0xc25a56> CRC_24_BLE;
    crc::crc_base<uint64_t, 24, 0x5d6dcb, 0xfedcba, 0x000000, false, false, true, 0x7979bd> CRC_24_FLEXRAY_A;
    crc::crc_base<uint64_t, 24, 0x5d6dcb, 0xabcdef, 0x000000, false, false, true, 0x1f23b8> CRC_24_FLEXRAY_B;
    crc::crc_base<uint64_t, 24, 0x328b63, 0xffffff, 0xffffff, false, false, true, 0xb4f3e6> CRC_24_INTERLAKEN;
    crc::crc_base<uint64_t, 24, 0x864cfb, 0x000000, 0x000000, false, false, true, 0xcde703> CRC_24_LTE_A;
    crc::crc_base<uint64_t, 24, 0x800063, 0x000000, 0x000000, false, false, true, 0x23ef52> CRC_24_LTE_B;
    crc::crc_base<uint64_t, 30, 0x2030b9c7, 0x3fffffff, 0x3fffffff, false, false, true, 0x04c34abf> CRC_30_CDMA;
    crc::crc_base<uint64_t, 31, 0x04c11db7, 0x7fffffff, 0x7fffffff, false, false, true, 0x0ce9e46c> CRC_31_PHILIPS;
    crc::crc_base<uint64_t, 32, 0x04c11db7, 0xffffffff, 0xffffffff, true, true, true, 0xcbf43926> CRC_32;
    crc::crc_base<uint64_t, 32, 0xf4acfb13, 0xffffffff, 0xffffffff, true, true, true, 0x1697d06a> CRC_32_AUTOSAR;
    crc::crc_base<uint64_t, 32, 0x04c11db7, 0xffffffff, 0xffffffff, false, false, true, 0xfc891918> CRC_32_BZIP2;
    crc::crc_base<uint64_t, 32, 0x1edc6f41, 0xffffffff, 0xffffffff, true, true, true, 0xe3069283> CRC_32C;
    crc::crc_base<uint64_t, 32, 0xa833982b, 0xffffffff, 0xffffffff, true, true, true, 0x87315576> CRC_32D;
    crc::crc_base<uint64_t, 32, 0x04c11db7, 0xffffffff, 0x00000000, false, false, true, 0x0376e6e7> CRC_32_MPEG_2;
    crc::crc_base<uint64_t, 32, 0x04c11db7, 0x00000000, 0xffffffff, false, false, true, 0x765e7680> CRC_32_POSIX;
    crc::crc_base<uint64_t, 32, 0x814141ab, 0x00000000, 0x00000000, false, false, true, 0x3010bf7f> CRC_32Q;
    crc::crc_base<uint64_t, 32, 0x04c11db7, 0xffffffff, 0x00000000, true, true, true, 0x340bc6d9> JAMCRC;
    crc::crc_base<uint64_t, 32, 0x000000af, 0x00000000, 0x00000000, false, false, true, 0xbd0be338> XFER;
    crc::crc_base<uint64_t, 40, 0x0004820009, 0x0000000000, 0xffffffffff, false, false, true, 0xd4164fc646> CRC_40_GSM;
    crc::crc_base<uint64_t, 64, 0x42f0e1eba9ea3693, 0x0000000000000000, 0x0000000000000000, false, false, true, 0x6c40df5f0b497347> CRC_64;
    crc::crc_base<uint64_t, 64, 0x000000000000001b, 0xffffffffffffffff, 0xffffffffffffffff, true, true, true, 0xb90956c775a41001> CRC_64_GO_ISO;
    crc::crc_base<uint64_t, 64, 0x42f0e1eba9ea3693, 0xffffffffffffffff, 0xffffffffffffffff, false, false, true, 0x62ec59e3f1a4f00a> CRC_64_WE;
    crc::crc_base<uint64_t, 64, 0x42f0e1eba9ea3693, 0xffffffffffffffff, 0xffffffffffffffff, true, true, true, 0x995dc9bbdf1939fa> CRC_64_XZ;
}
